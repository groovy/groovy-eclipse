/*
 * Copyright 2009-2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package dsld

import org.codehaus.groovy.ast.*
import org.codehaus.groovy.ast.expr.*

contribute(currentType(annos: annotatedBy(groovy.transform.builder.Builder))) { //TODO: ctor, meth
    provider = '{@link groovy.transform.builder.Builder Builder} AST transform'

    AnnotationNode annotation = annos[0]
    String strategy = annotation.getMember('builderStrategy')?.type?.name ?:
        groovy.transform.builder.Builder.getMethod('builderStrategy').defaultValue.name

    switch (strategy) {
    case 'groovy.transform.builder.DefaultStrategy':
        String builderCall = annotation.getMember('builderMethodName')?.value ?: 'builder'
        String builderType = annotation.getMember('builderClassName')?.value ?: (currentType.nameWithoutPackage + 'Builder')

        method name: builderCall, type: (currentType.name + '$' + builderType), isStatic: true
        break

    default:
        log 'Unsupported builder strategy: ' + strategy
    }
}
