###############################################################################
# Copyright (c) 2000, 2018 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# https://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
#        Andy Clement (GoPivotal, Inc) aclement@gopivotal.com - Contributions for
#                          Bug 383624 - [1.8][compiler] Revive code generation support for type annotations (from Olivier's work)
#        Jesper Steen Moeller - Contribution for
#                          Bug 406973 - [compiler] Parse MethodParameters attribute
###############################################################################

### JavaModel messages.

### hierarchy
hierarchy_nullProject = Project argument cannot be null
hierarchy_nullRegion = Region cannot be null
hierarchy_nullFocusType = Type focus cannot be null
hierarchy_creating = Creating type hierarchy...
hierarchy_creatingOnType = Creating type hierarchy on {0}...

### java element
element_doesNotExist = {0} does not exist
element_notOnClasspath = {0} is not on its project''s build path
element_invalidClassFileName = {0} is not a valid class file name
element_reconciling = Reconciling...
element_attachingSource = Attaching source...
element_invalidResourceForProject = Illegal argument - must be one of IProject, IFolder, or IFile
element_nullName = Name cannot be null
element_nullType = Type cannot be null
element_illegalParent = Illegal parent argument
element_moduleInfoNotSupported=module-info.class is not supported by method IPackageFragment.getClassFile(String).

### java model operations
operation_needElements = Operation requires one or more elements
operation_needName = Operation requires a name
operation_needPath = Operation requires a path
operation_needAbsolutePath = Operation requires an absolute path. Relative path specified was: ''{0}''
operation_needString = Operation requires a String.
operation_notSupported = Operation not supported for specified element type(s):
operation_cancelled = Operation cancelled
operation_nullContainer = Container cannot be null
operation_nullName = Name cannot be null
operation_copyElementProgress = Copying elements...
operation_moveElementProgress = Moving elements...
operation_renameElementProgress = Renaming elements...
operation_copyResourceProgress = Copying resources...
operation_moveResourceProgress = Moving resources...
operation_renameResourceProgress = Renaming resources...
operation_createUnitProgress = Creating a compilation unit...
operation_createFieldProgress = Creating a field...
operation_createImportsProgress = Creating imports...
operation_createInitializerProgress = Creating an initializer...
operation_createMethodProgress = Creating a method...
operation_createPackageProgress = Creating a package declaration...
operation_createPackageFragmentProgress = Creating package fragment(s)...
operation_createTypeProgress = Creating a type...
operation_deleteElementProgress = Deleting elements...
operation_deleteResourceProgress = Deleting resources...
operation_cannotRenameDefaultPackage = Default package cannot be renamed
operation_pathOutsideProject = Path ''{0}'' must denote location inside project ''{1}''
operation_sortelements = Sorting elements...

### working copy
workingCopy_commit = Committing working copy...

### build status messages
build_preparingBuild = Preparing to build {0}
build_readStateProgress = Reading saved build state for project {0}
build_saveStateProgress = Saving build state for project {0}
build_saveStateComplete = Saved in {0} ms
build_readingDelta = Reading resource change information for {0}
build_analyzingDeltas = Analyzing deltas
build_analyzingSources = Analyzing sources
build_cleaningOutput = Cleaning output folder for {0}
build_copyingResources = Copying resources to the output folder
build_compiling = Compiling {0}
build_foundHeader = Found
build_fixedHeader = Fixed
build_oneError = 1 error
build_oneWarning = 1 warning
build_multipleErrors = {0} errors
build_multipleWarnings = {0} warnings
build_done = Build done

### build errors
build_wrongFileFormat = Wrong file format
build_cannotSaveState = Error saving last build state for project {0}
build_cannotSaveStates = Error saving build states
build_initializationError = Builder initialization error
build_serializationError = Builder serialization error

### build inconsistencies
build_classFileCollision = Class file collision: {0}
build_duplicateClassFile = The type {0} is already defined
build_duplicateResource = The resource is a duplicate of {0} and was not copied to the output folder
build_inconsistentClassFile = A class file was not written. The project may be inconsistent, if so try refreshing this project and building it
build_inconsistentProject = The project was not built due to "{0}". Fix the problem, then try refreshing this project and building it since it may be inconsistent
build_incompleteClassPath = The project was not built since its build path is incomplete. Cannot find the class file for {0}. Fix the build path then try building this project
build_missingSourceFile = The project was not built since the source file {0} could not be read
build_prereqProjectHasClasspathProblems = The project was not built since it depends on {0}, which has build path errors
build_prereqProjectMustBeRebuilt = The project cannot be built until its prerequisite {0} is built. Cleaning and building all projects is recommended
build_abortDueToClasspathProblems = The project cannot be built until build path errors are resolved

### status
status_cannotUseDeviceOnPath = Operation requires a path with no device. Path specified was: {0}
status_coreException = Core exception
status_defaultPackageReadOnly = Default package is read-only
status_evaluationError = Evaluation error: {0}
status_JDOMError = JDOM error
status_IOException = I/O exception
status_indexOutOfBounds = Index out of bounds
status_invalidContents = Invalid contents specified
status_invalidDestination = Invalid destination: ''{0}''
status_invalidName = Invalid name specified: {0}
status_invalidPackage = Invalid package: {0}
status_invalidPath = Invalid path: ''{0}''
status_invalidProject = Invalid project: {0}
status_invalidResource = Invalid resource: {0}
status_invalidResourceType = Invalid resource type for {0}
status_invalidSibling = Invalid sibling: {0}
status_nameCollision = {0} already exists in target
status_noLocalContents = Cannot find local contents for resource: {0}
status_OK = OK
status_readOnly = {0} is read-only
status_targetException = Target exception
status_updateConflict = Update conflict
status_cannot_retrieve_attached_javadoc = Cannot retrieve the attached javadoc for {0}{1}
status_unknown_javadoc_format = Unknown javadoc format for {0}
status_timeout_javadoc = Timed out while retrieving the attached javadoc for {0}{1} 

### classpath
classpath_buildPath = Build path
classpath_cannotNestEntryInEntry = Cannot nest ''{0}'' inside ''{1}''. To enable the nesting exclude ''{2}'' from ''{1}''
classpath_cannotNestEntryInEntryNoExclusion= Cannot nest ''{0}'' inside ''{1}''. To allow the nesting enable use of exclusion patterns in the preferences of project ''{1}'' and exclude ''{2}'' from ''{1}''
classpath_cannotNestEntryInLibrary = Cannot nest ''{0}'' inside library ''{1}''
classpath_cannotNestEntryInOutput = Cannot nest ''{0}'' inside output folder ''{1}''
classpath_cannotNestOutputInEntry = Cannot nest output folder ''{0}'' inside ''{1}''
classpath_cannotNestOutputInOutput = Cannot nest output folder ''{0}'' inside output folder ''{1}''
classpath_cannotReadClasspathFile = Unable to read ''.classpath'' file of project ''{0}''
classpath_cannotReferToItself = Project ''{0}'' cannot reference itself
classpath_cannotUseDistinctSourceFolderAsOutput = Source folder ''{0}'' in project ''{2}'' cannot output to distinct source folder ''{1}''
classpath_cannotUseLibraryAsOutput = Source folder ''{0}'' in project ''{2}'' cannot output to library ''{1}''
classpath_closedProject = Required project ''{0}'' needs to be open
classpath_couldNotWriteClasspathFile = Could not write ''.classpath'' file of project ''{0}'': {1}
classpath_cycle = A cycle was detected in the build path of project ''{0}''. The cycle consists of projects '{'{1}'}'
classpath_duplicateEntryPath = Build path contains duplicate entry: ''{0}'' for project ''{1}''
classpath_illegalContainerPath = Illegal classpath container path: ''{0}'' in project ''{1}'', must have at least one segment (containerID+hints)
classpath_illegalEntryInClasspathFile = Illegal entry in ''.classpath'' of project ''{0}'' file: {1}
classpath_illegalLibraryPath = Illegal path for required library: ''{0}'' in project ''{1}''
classpath_illegalLibraryPathInContainer = Illegal path for required library: ''{0}'' in the {1}
classpath_illegalLibraryArchive = Illegal type of archive for required library: ''{0}'' in project ''{1}''
classpath_archiveReadError = Archive for required library: ''{0}'' in project ''{1}'' cannot be read or is not a valid ZIP file
classpath_illegalExternalFolder = Required library cannot denote external folder: ''{0}'' for project ''{1}''
classpath_illegalExternalFolderInContainer = Required library cannot denote external folder: ''{0}'' in the {1}
classpath_illegalProjectPath = Illegal path for required project: ''{0}'' in project ''{1}''
classpath_illegalSourceFolderPath = Illegal path for required source folder: ''{0}'' in project ''{1}''
classpath_illegalVariablePath = Illegal classpath variable path: ''{0}'' in project ''{1}'', must have at least one segment
classpath_invalidClasspathInClasspathFile = Invalid build path in ''.classpath'' file of project ''{0}'': {1}
classpath_invalidContainer = Invalid classpath container: ''{0}'' in project ''{1}''
classpath_mustEndWithSlash = End exclusion filter ''{0}'' with / to fully exclude ''{1}''
classpath_unboundContainerPath = Unbound classpath container: ''{0}'' in project ''{1}''
classpath_unboundLibrary = Project ''{1}'' is missing required library: ''{0}''
classpath_userLibraryInfo = user library ''{0}''
classpath_containerInfo = container ''{0}''
classpath_unboundLibraryInContainer = The {1} references non existing library ''{0}''
classpath_unboundProject = Project ''{1}'' is missing required Java project: ''{0}''
classpath_settingOutputLocationProgress = Setting output location for: ''{0}''
classpath_settingProgress = Setting classpath for: {0}
classpath_unboundSourceAttachment = Invalid source attachment: ''{0}'' for required library ''{1}'' in project ''{2}''
classpath_unboundSourceAttachmentInContainedLibrary = Invalid source attachment: ''{0}'' for required library ''{1}'' in the {2}
classpath_unboundSourceFolder = Project ''{1}'' is missing required source folder: ''{0}''
classpath_unboundVariablePath = Unbound classpath variable: ''{0}'' in project ''{1}''
classpath_unknownKind = Unknown kind: ''{0}''
classpath_xmlFormatError = XML format error in ''.classpath'' file of project ''{0}'': {1}
classpath_disabledInclusionExclusionPatterns = Inclusion or exclusion patterns are disabled in project ''{1}'', cannot selectively include or exclude from entry: ''{0}''
classpath_disabledMultipleOutputLocations = Multiple output locations are disabled in project ''{1}'', cannot associate entry: ''{0}'' with a specific output
classpath_incompatibleLibraryJDKLevel = Incompatible .class files version in required binaries. Project ''{0}'' is targeting a {1} runtime, but is compiled against ''{2}'' which requires a {3} runtime
classpath_incompatibleLibraryJDKLevelInContainer = Incompatible .class files version in required binaries. Project ''{0}'' is targeting a {1} runtime, but is compiled against ''{2}'' (from the {3}) which requires a {4} runtime
classpath_duplicateEntryExtraAttribute = Duplicate extra attribute: ''{0}'' in classpath entry ''{1}'' for project ''{2}''
classpath_deprecated_variable = Classpath variable ''{0}'' in project ''{1}'' is deprecated: {2}
classpath_invalidExternalAnnotationPath = Invalid external annotation path: ''{0}'' in project ''{1}'', for classpath entry ''{2}''
classpath_testSourceRequiresSeparateOutputFolder=Test source folder ''{0}'' in project ''{1}'' must have a separate output folder
classpath_testOutputFolderMustBeSeparateFromMainOutputFolders=Test source folder ''{0}'' in project ''{1}'' must have an output folder that is not also used for main sources

### miscellaneous
buffer_closed=Buffer is closed
file_notFound = File not found: ''{0}''
file_badFormat = Bad format
path_nullPath = Path cannot be null
path_mustBeAbsolute = Path must be absolute
cache_invalidLoadFactor = Incorrect load factor
savedState_jobName = Processing Java changes since last activation
refreshing_external_folders = Refreshing external folders
synchronizing_projects_job = Synchronizing projects
internal_error=Unexpected internal error

## java model initialization
javamodel_initialization = Initializing Java tooling
javamodel_initializing_delta_state= Initializing delta state
javamodel_configuring_searchengine=Configuring search engine
javamodel_configuring_classpath_containers=Configuring classpath containers
javamodel_getting_build_state_number=Getting build state version number
javamodel_configuring=Configuring {0}
javamodel_building_after_upgrade=Triggering build after upgrade
javamodel_refreshing_external_jars=Refreshing external archives
javamodel_resetting_source_attachment_properties=Resetting source attachment properties

### java conventions
convention_unit_nullName = Compilation unit name must not be null
convention_unit_notJavaName = Compilation unit name must end with .java, or one of the registered Java-like extensions
convention_classFile_nullName = .class file name must not be null
convention_classFile_notClassFileName = .class file name must end with .class
convention_illegalIdentifier = ''{0}'' is not a valid Java identifier
convention_import_nullImport = An import declaration must not be null
convention_import_unqualifiedImport = An import declaration must not end with an unqualified *
convention_type_nullName = A Java type name must not be null
convention_type_nameWithBlanks = A Java type name must not start or end with a blank
convention_type_dollarName = By convention, Java type names usually don't contain the $ character
convention_type_lowercaseName = By convention, Java type names usually start with an uppercase letter
convention_type_invalidName = The type name ''{0}'' is not a valid identifier
convention_package_nullName = A package name must not be null
convention_package_emptyName = A package name must not be empty
convention_package_dotName = A package name cannot start or end with a dot
convention_package_nameWithBlanks = A package name must not start or end with a blank
convention_package_consecutiveDotsName = A package name must not contain two consecutive dots
convention_package_uppercaseName = By convention, package names usually start with a lowercase letter
convention_module_nullName = A module name must not be null
convention_module_emptyName = A module name must not be empty
convention_module_dotName = A module name cannot start or end with a dot
convention_module_nameWithBlanks = A module name must not start or end with a blank
convention_module_consecutiveDotsName = A module name must not contain consecutive dots
convention_module_uppercaseName = By convention, module names usually start with a lowercase letter
convention_module_javaName = 'java' is reserved for system modules

### DOM
dom_cannotDetail = Unable to generate detailed source indexes
dom_nullTypeParameter = Cannot add parameter with null type
dom_nullNameParameter = Cannot add parameter with null name
dom_nullReturnType = Return type cannot be null
dom_nullExceptionType = Cannot add null exception
dom_mismatchArgNamesAndTypes = Types and names must have identical length
dom_addNullChild = Attempt to add null child
dom_addIncompatibleChild = Attempt to add child of incompatible type
dom_addChildWithParent = Attempt to add child that is already parented
dom_unableAddChild = Attempt to add child to node that cannot have children
dom_addAncestorAsChild = Attempt to add ancestor as child
dom_addNullSibling = Attempt to insert null sibling
dom_addSiblingBeforeRoot = Attempt to insert sibling before root node
dom_addIncompatibleSibling = Attempt to insert sibling of incompatible type
dom_addSiblingWithParent = Attempt to insert sibling that is already parented
dom_addAncestorAsSibling = Attempt to insert ancestor as sibling
dom_addNullInterface = Cannot add null interface
dom_nullInterfaces = Illegal to set super interfaces to null

### import rewrite
importRewrite_processDescription = Updating imports

### correction
correction_nullRequestor = Requestor cannot be null
correction_nullUnit = Compilation unit cannot be null

### Eclipse Java Core Search messages.

engine_searching = Searching...
engine_searching_indexing = Looking through {0} indexes...
engine_searching_matching = Locating {0} matches...
exception_wrongFormat = Wrong format
process_name = Java indexing
jobmanager_filesToIndex = {1} files to index ({0})
jobmanager_indexing = Java indexing... 

### Disassembler messages

### disassembler
disassembler_description = Default classfile disassembler
disassembler_opentypedeclaration =\ '{'
disassembler_closetypedeclaration = }
disassembler_parametername = arg
disassembler_anonymousparametername = <anonymous>
disassembler_localvariablename = local_{0}
disassembler_endofmethodheader = ;
disassembler_begincommentline = //\ 
disassembler_fieldhasconstant =\ =\ 
disassembler_endoffieldheader = ;
disassembler_sourceattributeheader = Compiled from\ 
disassembler_enclosingmethodheader = Enclosing Method:
disassembler_exceptiontableheader = Exception Table:
disassembler_linenumberattributeheader = Line numbers:
disassembler_methodparametersheader = Method Parameters:
disassembler_localvariabletableattributeheader = Local variable table:
disassembler_localvariabletypetableattributeheader = Local variable type table:
disassembler_arraydimensions = []
disassembler_innerattributesheader = Inner classes:
disassembler_inner_class_info_name = inner class info:
disassembler_outer_class_info_name = outer class info:
disassembler_inner_name = inner name:
disassembler_inner_accessflags = accessflags:\ 
disassembler_genericattributeheader = Attribute: {0} Length: {1}
disassembler_stackmaptableattributeheader = Stack map table: number of frames {0}
disassembler_stackmapattributeheader =  Stack map : number of frames {0}
disassembler_signatureattributeheader = // Signature: {0}
disassembler_bootstrapmethodattributesheader = Bootstrap methods:
disassembler_bootstrapmethodentry = {0} : # {1} {2}\n\tMethod arguments:\n\t\t{3}
disassembler_bootstrapmethodentry_argument = #{0} {1}
disassembler_indentation = \  
disassembler_constantpoolindex =\ #
disassembler_space = \ 
disassembler_comma = ,
disassembler_openinnerclassentry = [
disassembler_closeinnerclassentry = ]
disassembler_deprecated =\ (deprecated)
disassembler_constantpoolheader = Constant pool:
disassembler_constantpool_class = constant #{0} class: #{1} {2}
disassembler_constantpool_double = constant #{0} double: {1}
disassembler_constantpool_float = constant #{0} float: {1}
disassembler_constantpool_integer = constant #{0} integer: {1}
disassembler_constantpool_long = constant #{0} long: {1}
disassembler_constantpool_string = constant #{0} string: #{1} "{2}"
disassembler_constantpool_fieldref = constant #{0} field_ref: #{1}.#{2} {3}.{4} {5}
disassembler_constantpool_interfacemethodref = constant #{0} interface_method_ref: #{1}.#{2} {3}.{4} {5}
disassembler_constantpool_methodref = constant #{0} method_ref: #{1}.#{2} {3}.{4} {5}
disassembler_constantpool_name_and_type = constant #{0} name_and_type: #{1}.#{2} {3} {4}
disassembler_constantpool_utf8 = constant #{0} utf8: "{1}"
disassembler_constantpool_methodhandle = constant #{0} method handle: {1} #{2} 
disassembler_constantpool_methodtype = constant #{0} method type: #{1} {2}
disassembler_constantpool_invokedynamic = constant #{0} invoke dynamic: #{1} #{2} {3} {4}
disassembler_annotationdefaultheader = Annotation Default:\ 
disassembler_annotationdefaultvalue= {0} (constant type)
disassembler_annotationenumvalue = {2}.{3}(enum type #{0}.#{1})
disassembler_annotationclassvalue = {1} (#{0} class type)
disassembler_annotationannotationvalue = annotation value =
disassembler_annotationarrayvaluestart = [
disassembler_annotationarrayvalueend = ]
disassembler_annotationentrystart = #{0} @{1}(
disassembler_annotationentryend = )
# jsr308 (next two)
disassembler_extendedannotationentrystart=#{0} @{1}(
disassembler_extendedannotationentryend= )
disassembler_annotationcomponent = #{0} {1}=
disassembler_runtimevisibleannotationsattributeheader= RuntimeVisibleAnnotations:\ 
disassembler_runtimeinvisibleannotationsattributeheader= RuntimeInvisibleAnnotations:\ 
# jsr308 (next two)
disassembler_runtimevisibletypeannotationsattributeheader= RuntimeVisibleTypeAnnotations:\ 
disassembler_runtimeinvisibletypeannotationsattributeheader= RuntimeInvisibleTypeAnnotations:\ 
disassembler_runtimevisibleparameterannotationsattributeheader= RuntimeVisibleParameterAnnotations:\ 
disassembler_runtimeinvisibleparameterannotationsattributeheader= RuntimeInvisibleParameterAnnotations:\ 
disassembler_parameterannotationentrystart=Number of annotations for parameter {0}: {1}
disassembler_frame_same_locals_1_stack_item_extended=[pc: {0}, same_locals_1_stack_item_extended, stack: {1}]
disassembler_frame_chop=[pc: {0}, chop {1} local(s)]
disassembler_frame_same_frame_extended=[pc: {0}, same_extended]
disassembler_frame_append=[pc: {0}, append: {1}]
disassembler_method_type_ref_getfield = getfield ({0})
disassembler_method_type_ref_putfield = putfield ({0})
disassembler_method_type_ref_getstatic = getstatic ({0})
disassembler_method_type_ref_putstatic = putstatic ({0})
disassembler_method_type_ref_invokestatic = invokestatic ({0})
disassembler_method_type_ref_invokevirtual = invokevirtual ({0})
disassembler_method_type_ref_invokeinterface = invokeinterface ({0})
disassembler_method_type_ref_invokespecial = invokespecial ({0})
disassembler_method_type_ref_newinvokespecial = newinvokespecial ({0})
# {0} = offset delta
# {1} = number of locals
# {2} = locals
# {3} = number of stack items
# {4} = stack items
# {5} = line separator + tabs
disassembler_frame_full_frame=[pc: {0}, full, stack: {4}, locals: {2}]
disassembler_frame_same_frame=[pc: {0}, same]
disassembler_frame_same_locals_1_stack_item=[pc: {0}, same_locals_1_stack_item, stack: {1}]
# jsr308
disassembler_extendedannotation_targetType=target type = 0x{0} {1}
disassembler_extendedannotation_classextendsimplements=type index = {0}
disassembler_extendedannotation_typepath=location = {0}
disassembler_extendedannotation_method_parameter=method parameter index = {0}
disassembler_extendedannotation_offset=offset = {0}
disassembler_extendedannotation_throws=throws index = {0}
disassembler_extendedannotation_type_argument=type argument index = {0}
disassembler_extendedannotation_type_parameter=type parameter index = {0}
disassembler_extendedannotation_type_parameter_with_bound=type parameter index = {0} type parameter bound index = {1}
disassembler_extendedannotation_wildcardlocationtype=wildcard location type = 0x{0} {1}
disassembler_extendedannotation_wildcardlocations=wildcard locations = {0}
disassembler_extendedannotation_exception_table_index=exception table index = {0}
disassembler_localvariabletargetheader=local variable entries:
disassembler_extendedannotation_typepath_array=ARRAY
disassembler_extendedannotation_typepath_innertype=INNER_TYPE
disassembler_extendedannotation_typepath_wildcard=WILDCARD
disassembler_extendedannotation_typepath_typeargument=TYPE_ARGUMENT({0})
disassembler_module_version=// Version: {0}
disassembler_module_version_none=<none>
disassembler_modulepackagesattributeheader = Module packages:
disassembler_modulemainclassattributeheader=Module main class:

### classfileformat decoding
classfileformat_versiondetails =\ (version {0} : {1}.{2}, {3})
classfileformat_methoddescriptor = // Method descriptor #{0} {1}
classfileformat_fieldddescriptor = // Field descriptor #{0} {1}
classfileformat_stacksAndLocals= // Stack: {0}, Locals: {1}
classfileformat_superflagisnotset = no super bit
classfileformat_superflagisset = super bit
classfileformat_clinitname = '{'}
classformat_classformatexception = Class Format Exception
classfileformat_versionUnknown = unknown

### string displayed for each opcode
classformat_anewarray = {0} {2} [{1}]
classformat_checkcast = {0} {2} [{1}]
classformat_instanceof = {0} {2} [{1}]
classformat_ldc_w_methodtype = {0} <MethodType {2}> [{1}]
classformat_ldc_w_methodhandle = {0} <MethodHandle {2} {3}> [{1}]
classformat_ldc_w_class = {0} <Class {2}> [{1}]
classformat_ldc_w_float = {0} <Float {2}> [{1}]
classformat_ldc_w_integer = {0} <Integer {2}> [{1}]
classformat_ldc_w_string = {0} <String "{2}"> [{1}]
classformat_ldc2_w_long = {0} <Long {2}> [{1}]
classformat_ldc2_w_double = {0} <Double {2}> [{1}]
classformat_multianewarray = {0} {2} [{1}]
classformat_new = {0} {2} [{1}]
classformat_iinc = {0} {1} {2}{3}
classformat_invokespecial ={0} {2} [{1}]
classformat_invokeinterface ={0} {3} [{1}] [nargs: {2}]
classformat_invokedynamic={0} {2} {3} [{1}]
classformat_invokestatic ={0} {2} [{1}]
classformat_invokevirtual ={0} {2} [{1}]
classformat_getfield ={0} {2}.{3} : {4} [{1}]
classformat_getstatic ={0} {2}.{3} : {4} [{1}]
classformat_putstatic ={0} {2}.{3} : {4} [{1}]
classformat_putfield ={0} {2}.{3} : {4} [{1}]
classformat_newarray_boolean = {0} boolean [{1}]
classformat_newarray_char = {0} char [{1}]
classformat_newarray_float = {0} float [{1}]
classformat_newarray_double = {0} double [{1}]
classformat_newarray_byte = {0} byte [{1}]
classformat_newarray_short = {0} short [{1}]
classformat_newarray_int = {0} int [{1}]
classformat_newarray_long = {0} long [{1}]
classformat_store = {0}{1}
classformat_load = {0}{1}
classfileformat_anyexceptionhandler=any
classfileformat_exceptiontableentry = [pc: {0}, pc: {1}] -> {2} when : {3}
classfileformat_linenumbertableentry = [pc: {0}, line: {1}]
classfileformat_localvariabletableentry = [pc: {0}, pc: {1}] local: {2} index: {3} type: {4}
# jsr 308
classfileformat_localvariablereferenceinfoentry=[pc: {0}, pc: {1}] index: {2}

### Eclipse Java Core completion messages.
engine_completing = Computing proposals...
