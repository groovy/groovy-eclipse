<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- I don't like how this works, it is terribly long and complicated for basically being just
	    two for loops to build composite sites and upload them to amazon s3.
	    
	    Maybe we should explore some other scripting language or build system to tackle this.
	    Maybe gradle? Or just a groovy script.
	 -->

 	<parent>
		<relativePath>../../pom.xml</relativePath>
		<groupId>org.codehaus.groovy.eclipse</groupId>
		<artifactId>org.codehaus.groovy.eclipse.parent</artifactId>
		<version>2.9.1-SNAPSHOT</version>
	</parent>

	<groupId>org.codehaus.groovy.eclipse</groupId>
	<artifactId>org.codehaus.groovy.eclipse.release-sites</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<pluginRepositories>
		<pluginRepository>
			<id>plugins-snapshot-local</id>
			<name>plugins-snapshot-local</name>
			<url>http://repo.spring.io/plugins-snapshot-local</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<layout>default</layout>
		</pluginRepository>
	</pluginRepositories>

	<properties>
		<dist.version>2.9.1</dist.version>
		<dist.bucket>dist.springsource.org</dist.bucket>
		<!-- before doing it 'for real' you can try the path with '-test' in it.
			This will upload and do everything as if a real release, but in a 'GRECLIPSE-test' directory.
			That way there's no risk of accidentally deleting / overwriting something important. 
			If all is working well? Then remove the '-test' -->
		<dist.path>release/GRECLIPSE-test</dist.path>
		<!-- if you change dist.targets you also have to change the list of <items> embedded in the 
		     build-loqic below -->
		<dist.targets>e4.4,e4.3,e4.3-j8,e4.2,e3.7</dist.targets>
	</properties>

	<profiles>
		<profile>
			<id>bamboo-s3</id>
			<activation>
				<property>
					<name>env.bamboo_s3_properties</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>properties-maven-plugin</artifactId>
						<version>1.0-alpha-2</version>
						<executions>
							<execution>
								<phase>initialize</phase>
								<goals>
									<goal>read-project-properties</goal>
								</goals>
								<configuration>
									<quiet>true</quiet>
									<files>
										<file>${env.bamboo_s3_properties}</file>
									</files>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- convenient profile so can run on local machine. To enable/use this profile
			    you need to place your s3 credentials in ~/.s3-access.properties -->
			<id>local-s3</id>
			<activation>
				<file>
					<exists>${env.HOME}/.s3-access.properties</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>properties-maven-plugin</artifactId>
						<version>1.0-alpha-2</version>
						<executions>
							<execution>
								<phase>initialize</phase>
								<goals>
									<goal>read-project-properties</goal>
								</goals>
								<configuration>
									<files>
										<file>${env.HOME}/.s3-access.properties</file>
									</files>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
		<plugins>
			<plugin>
				<!-- disable because we have our own stuff to upload to s3 -->
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.soebes.maven.plugins</groupId>
				<artifactId>iterator-maven-plugin</artifactId>
				<version>0.2</version>
		        <executions>
		          <execution>
		            <phase>generate-resources</phase>
					<goals>
						<goal>executor</goal>
					</goals>
					<configuration> 
						<items>
							<!-- It would be nice to define the list of items as a variable up top but this not possible. -->
							<item>e4.4</item>
							<item>e4.3</item>
							<item>e4.3-j8</item>
							<item>e4.2</item>
							<item>e3.7</item>
						</items>
						<pluginExecutors> <pluginExecutor>
							<plugin>
								<groupId>org.springsource.ide</groupId>
								<artifactId>p2.composite.site.maven.plugin</artifactId>
								<version>1.0.0-SNAPSHOT</version>
							</plugin>
							<goal>generate</goal>
							<configuration>
								<name>Groovy Eclipse Latest Release for Eclipse @item@</name>
								<target>${project.build.directory}/site/@item@</target>
								<sites>
									<param>http://dist.springsource.org/release/GRECLIPSE/${dist.version}/@item@</param>
								</sites>
							</configuration>
						</pluginExecutor> </pluginExecutors> 
					</configuration>
		          </execution>
				</executions>				
			</plugin>		

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<dependencies>
					<dependency>
						<groupId>org.springframework.build</groupId>
						<artifactId>org.springframework.build.aws.ant</artifactId>
						<version>3.0.5.RELEASE</version>
					</dependency>
					<dependency>
						<groupId>net.java.dev.jets3t</groupId>
						<artifactId>jets3t</artifactId>
						<version>0.7.2</version>
					</dependency>
 					<dependency>
						<groupId>ant-contrib</groupId>
						<artifactId>ant-contrib</artifactId>
						<version>1.0b3</version>
						<exclusions>
							<exclusion>
								<groupId>ant</groupId>
								<artifactId>ant</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
					<dependency>
						<groupId>org.apache.ant</groupId>
						<artifactId>ant-nodeps</artifactId>
						<version>1.8.1</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>upload-dist</id>
						<phase>deploy</phase>
						<configuration>
							<target>
								<!-- add the ant tasks from ant-contrib -->
								<taskdef resource="net/sf/antcontrib/antlib.xml"/>

								<property name="dist.target" value="e4.3" />

								<taskdef resource="net/sf/antcontrib/antcontrib.properties" />
								<taskdef resource="org/springframework/build/aws/ant/antlib.xml" />

								<echo message="Uploading composite sites to s3" />
								<echo message="dist.path = ${dist.path}" />
								<echo message="dist.bucket = ${dist.bucket}" />

								<!-- must take extreme care here only to delete eX.X dirs we are 
									uploading new content to. The idea is to leave older ones alone so people 
									using those old eclipses can still get the latest release that was published 
									for that old eclipse -->
									
								<for list="${dist.targets}" param="eXX">
									<sequential>
										<echo message="delete/upload ${dist.path} pattern: @{eXX}/**" />
									
										<s3 accessKey="${accessKey}" secretKey="${secretKey}">
											<delete bucketName="${dist.bucket}">
												<fileset dir="${dist.path}">
													<include name="@{eXX}/**" />
												</fileset>
											</delete>
											<upload bucketName="${dist.bucket}" toDir="${dist.path}" publicRead="true"> 
												<fileset dir="${project.build.directory}/site"> 
													<include name="@{eXX}/**" /> 
												</fileset>
											</upload>
										</s3>
									</sequential>
								</for>

							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>